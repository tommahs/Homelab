apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: observability
spec:
  mode: daemonset
  config: |
    receivers:
      # For Kubernetes metrics
      kubeletstats:
        collection_interval: 20s
        auth_type: "serviceAccount"
        endpoint: "${K8S_NODE_NAME}:10250"
      
      # For application metrics (Prometheus format)
      prometheus:
        config:
          scrape_configs:
            - job_name: 'kubernetes-pods'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
      
      # For logs
      filelog:
        include: [ /var/log/pods/*/*.log ]
        start_at: end
        include_file_path: true
        operators:
          - type: json_parser
            
      # For traces
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_mib: 1000
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.container.name

    exporters:
      # For metrics to Mimir
      prometheusremotewrite:
        endpoint: "http://mimir-distributor.observability.svc.cluster.local:8080/api/v1/push"
        tls:
          insecure: true
      
      # For logs to Loki
      loki:
        endpoint: "http://loki-gateway.observability.svc.cluster.local:3100/loki/api/v1/push"
        # tenant_id: "fake"
        labels:
          resource:
            pod: "k8s.pod.name"
            namespace: "k8s.namespace.name"
            node: "k8s.node.name"
            container: "k8s.container.name"
      
      # For traces to Tempo
      otlp:
        endpoint: tempo-distributor.observability.svc.cluster.local:4317
        tls:
          insecure: true

    service:
      pipelines:
        metrics:
          receivers: [kubeletstats, prometheus]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [prometheusremotewrite]
        logs:
          receivers: [filelog]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [loki]
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [otlp]