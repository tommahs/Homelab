---
# mimir-gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mimir
      component: gateway
  template:
    metadata:
      labels:
        app: mimir
        component: gateway
    spec:
      containers:
      - name: nginx
        image: nginx:1.27-alpine
        ports:
        - containerPort: 3100
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: mimir-gateway
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-gateway
data:
  nginx.conf: |
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    tcp_nopush   on;
    resolver kube-dns.kube-system.svc.cluster.local valid=30s ipv6=off;
    server {
      set $read_upstream "http://mimir-query-frontend.observability.svc.cluster.local:8080";
      set $write_upstream "http://mimir-distributor.observability.svc.cluster.local:8080";
      listen               3100;

      location = / {
        limit_except GET {
          deny all;
        }
        add_header Content-Type text/plain;
        return 200 'mimir-gateway OK';
      }

    server {
      listen 8080;
      access_log /dev/null;
      location /stub_status {
        stub_status;
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: mimir-gateway
spec:
  ports:
  - port: 3100
    name: http
  selector:
    app: mimir
    component: gateway