apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: observability
  annotations:
    prometheus.io/scrape: "false"
spec:
  image: otel/opentelemetry-collector-contrib:latest 
  mode: daemonset
  env:
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  config: 
    receivers:
      # for getting stats from kubelet service
      kubeletstats:
        collection_interval: 20s
        auth_type: "serviceAccount"
        endpoint: "https://${env:K8S_NODE_NAME}:10250"
        insecure_skip_verify: true

      # For application metrics (Prometheus format)
      prometheus:
        config:
          scrape_configs:
            - job_name: 'kubernetes-pods'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                regex: "true"
                action: keep
              - source_labels: [__meta_kubernetes_pod_label_app]
                regex: otel-collector
                action: drop


            - job_name: 'ceph'
              static_configs:
                - targets: ['objectstore.tommahs.nl:80']

            - job_name: 'node'
              static_configs:
                - targets: ['$${env:K8S_NODE_NAME}:9100', 192.168.1.1:9100]
              relabel_configs:
                - source_labels: [__address__]
                  regex: ^([^:]+)(?::\d+)?$
                  target_label: __address__
                  replacement: $1
                  action: replace

      # # For traces
      # otlp:
      #   protocols:
      #     grpc:
      #       endpoint: 0.0.0.0:4317
      #     http:
      #       endpoint: 0.0.0.0:4318

    processors:
      batch: {}
      memory_limiter:
        check_interval: 1s
        limit_mib: 1000
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.container.name

    exporters:
      # For metrics to Mimir
      prometheusremotewrite:
        endpoint: "http://mimir-distributor.observability.svc.cluster.local:8080/api/v1/push"
        tls:
          insecure: true
      
      # For logs to Loki
      otlphttp:
        endpoint: "http://loki-gateway.observability.svc.cluster.local:3100/otlp/v1/logs"
      # For traces to Tempo
      otlp:
        endpoint: "http://tempo-distributor.observability.svc.cluster.local:4317"
        tls:
          insecure: true

    service:
      pipelines:
        metrics:
          receivers: [kubeletstats, prometheus]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [prometheusremotewrite]
        # logs:
        #   receivers: [filelog]
        #   processors: [memory_limiter, k8sattributes, batch]
        #   exporters: [otlphttp]
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, batch]
          exporters: [otlp]