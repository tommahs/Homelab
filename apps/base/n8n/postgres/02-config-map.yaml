apiVersion: v1
kind: ConfigMap
metadata:
  name: init-data
  namespace: n8n
data:
  init-data.sh: |
    #!/bin/bash
    set -e;
    if [ -n "${POSTGRES_NON_ROOT_USER:-}" ] && [ -n "${POSTGRES_NON_ROOT_PASSWORD:-}" ]; then
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "CREATE USER \"${POSTGRES_NON_ROOT_USER}\" WITH PASSWORD '${POSTGRES_NON_ROOT_PASSWORD}';"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "GRANT CREATE ON DATABASE \"$POSTGRES_DB\" TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "CREATE SCHEMA IF NOT EXISTS n8n_schema AUTHORIZATION \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "GRANT USAGE, CREATE ON SCHEMA n8n_schema TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA n8n_schema TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "GRANT USAGE, SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA n8n_schema TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "ALTER DEFAULT PRIVILEGES IN SCHEMA n8n_schema GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "ALTER DEFAULT PRIVILEGES IN SCHEMA n8n_schema GRANT USAGE, SELECT, UPDATE ON SEQUENCES TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "GRANT USAGE ON SCHEMA public TO \"${POSTGRES_NON_ROOT_USER}\";"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "GRANT CREATE ON SCHEMA public TO \"${POSTGRES_NON_ROOT_USER}\";"
    else
      echo "SETUP INFO: No Environment variables given!"
    fi
    echo "Configuring vector extension..."

    # Run the SQL command using environment variables
    PGPASSWORD="${POSTGRES_PASSWORD}" psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -c "CREATE EXTENSION IF NOT EXISTS vector;"

    echo "Vector extension installed."